name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: rustlama-linux-x86_64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            name: rustlama-linux-aarch64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: rustlama-windows-x86_64.exe
          - os: macOS-latest
            target: x86_64-apple-darwin
            name: rustlama-macos-x86_64
          - os: macOS-latest
            target: aarch64-apple-darwin
            name: rustlama-macos-aarch64

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install cross-compilation tools
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: |
        sudo apt-get update
        sudo apt-get install gcc-aarch64-linux-gnu

    - name: Build
      run: cargo build --release --target ${{ matrix.target }}

    - name: Strip binary (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ] && [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
          aarch64-linux-gnu-strip target/${{ matrix.target }}/release/rustlama
        else
          strip target/${{ matrix.target }}/release/rustlama
        fi

    - name: Rename binary
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          mv target/${{ matrix.target }}/release/rustlama.exe ${{ matrix.name }}
        else
          mv target/${{ matrix.target }}/release/rustlama ${{ matrix.name }}
        fi
      shell: bash

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.name }}
        path: ${{ matrix.name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          rustlama-linux-x86_64/rustlama-linux-x86_64
          rustlama-linux-aarch64/rustlama-linux-aarch64
          rustlama-windows-x86_64.exe/rustlama-windows-x86_64.exe
          rustlama-macos-x86_64/rustlama-macos-x86_64
          rustlama-macos-aarch64/rustlama-macos-aarch64
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
